buildscript {
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'com.gradle.plugin-publish' version '1.1.0'
    id 'groovy'
    id 'maven-publish'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

group 'com.cleanroommc'
version "${major_version}.${minor_version}.${patch_version}"

println 'Running CleanroomGradle Buildscript ' + version

tasks.register('generateGradleSource', JavaExec) {
    classpath = files('klokwrk-tool-gradle-source-repack-0.0.6-all.jar')
    args '8.0.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    google()
    maven {
        name 'Jitpack'
        url 'https://jitpack.io' // Gradle Download Task Plugin
    }
    maven {
        name 'MinecraftForge'
        url 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    // Gradle API
    implementation gradleApi()

    // Gradle Download Task Plugin
    implementation 'com.github.michel-kraemer:gradle-download-task:4.1.2'

    // CFR Decompiler
    implementation 'org.benf:cfr:0.152'

    // Vignette - Renaming/Remapping Tool
    implementation 'net.minecraftforge.lex:vignette:0.2.0.7'

    // ASM
    // implementation 'org.ow2.asm:asm:9.2'
    // implementation 'org.ow2.asm:asm-commons:9.2'
    // implementation 'org.ow2.asm:asm-tree:9.2'

    // Google's Guava+Gson
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.google.code.gson:gson:2.10.1'

    // Apache Commons
    implementation 'commons-io:commons-io:2.11.0'

    // Apache Maven
    implementation 'org.apache.maven:maven-artifact:3.8.4'

    // Gradle TestKit
    testImplementation gradleTestKit()
    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // Spock Framework
    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0') {
        exclude module: 'groovy-all'
    }
}

gradlePlugin {
    plugins {
        cleanroomGradle {
            id = 'com.cleanroommc.cleanroom-gradle'
            implementationClass = 'com.cleanroommc.gradle.CleanroomGradlePlugin'
        }
    }
   // automatedPublishing = false // true to declare java component automatically
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}